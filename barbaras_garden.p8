pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
-- bebe's garden

function _init()
	p_init() -- init player
	b_init() -- init beds
end

function _update()
	p_update() -- update player
	b_update() -- update beds
end

function _draw()
	cls(11)
	map()
	b_draw() -- draw beds
	p_draw() -- draw player
	debug()
end
-->8
-- player
function p_init()
	p={
		x=63,
		y=63,
		-- sprite
		s=48,
		f=false,
		-- inverntory
		inv={},
		-- animation
		al={51,52},
		ar={51,52},
		au={54,55},
		ad={49,50},
		last=nil,
		idle=48,
		spd=0.25,
		-- tools
		-- shovel, seed, can, bag
		ts={32,33,34,35}, -- tools
		ic={16,17,18,19}, -- icons
		ct=1, -- shovel
		dt=false -- draw tool
	}
end

-- update player
function p_update()
	-- movement
	if btn(⬅️) then
		p.x-=1
		p.f=true
		animate(p.al)
	elseif btn(➡️) then
		p.x+=1
		p.f=false
		animate(p.ar)
	elseif btn(⬆️) then
		p.y-=1
		animate(p.au)
	elseif btn(⬇️) then
		p.y+=1
		animate(p.ad)
	elseif btn(❎) then
		update_tools()
		animate(nil,true)
	else
		animate(nil)
	end
	-- switch tools
	if btnp(🅾️) then
		p.ct+=1
		if p.ct > #p.ts then
			p.ct=1
		end
	end
end

-- animate player
function animate(dir,tool)
	if dir then
		if dir ~= p.last then
			p.s = dir[1]
		end
		p.s += p.spd
		if p.s >= dir[2]+1 then
			p.s = dir[1]
		end
	else
		p.s=p.idle
	end
	p.last = dir
	-- allow drawing tool
	p.dt = tool or false
end

-- update tools
function update_tools()
	-- get player/tool tile
	local ptx = flr((p.x+4)/8 + 
		(p.f and -0.5 or 0.5))
	local pty = flr((p.y+4)/8)
	-- dig hole
	if p.ct == 1 then
		new_bed(ptx,pty)
	end
	-- plant seed
	if p.ct == 2 then
		plant_seed(ptx,pty)
	end
	-- water plant
	if p.ct == 3 then
		water_plant(ptx,pty)
	end
	-- harvest
	if p.ct == 4 then
		harvest(ptx,pty)
	end
end

-- draw player
function p_draw()
	pal(4,0) -- black hair
	spr(p.s,p.x,p.y,1,1,p.f,false)
	pal()
	draw_tool()
	draw_icon()
end

-- draw tool
function draw_tool()
	if p.dt then
		spr(
			p.ts[p.ct],
			p.x + (p.f and -3 or 3),
			p.y + 2,
			1,1,p.f,false
		)
	end
end

-- draw tool icon
function draw_icon()
	rectfill(1,116,11,126,0)
	rect(1,116,11,126,8)
	spr(p.ic[p.ct],3,117)
end
-->8
-- beds
function b_init()
	beds={}
	types={
		{6,6}, -- lettuce
		{7,23}, -- carrot
		{8,24}  -- radish
	}
end

-- update beds
function b_update()
	for bed in all(beds) do
		-- beds with seeds
		if bed.s == 3 then
			grow(bed,4)
		end
		-- beds with small plant
		if bed.s == 4 then
			grow(bed,5)
		end
	end
end

function grow(bed,new_sp)
	-- start timer if watered
	if bed.w > 20 then
		bed.t += 1
	end
	-- decrease water
	bed.w = bed.w < 0 and
	0 or bed.w-1
	-- grow
	if bed.t >= bed.mx and
		  bed.w >= 50 then
		  bed.s = new_sp
		  bed.w = 0
		  bed.t = 0
	end
end

-- draw beds
function b_draw()
	for i,bed in ipairs(beds) do
		-- draw bed
		mset(bed.x,bed.y,bed.s)
		-- draw fruit
		if bed.typ and
		bed.s == 5 then
			spr(
				bed.typ[1],
				bed.x*8,
				bed.y*8
			)
		end
		-- draw grow state
		if bed.s > 2 then
			local t = flr(bed.t/40)
			if t > 0 then
				rect(
					bed.x*8-1,
					bed.y*8-3,
					bed.x*8+8,
					bed.y*8-1,
					5
				)
				line(
					bed.x*8,
					bed.y*8-2,
					bed.x*8+t-1,
					bed.y*8-2,
					12
				)
			end
		end
	end
	-- draw inventory
	for i,frt in ipairs(p.inv) do
		rectfill(
			i*11-10,1,i*11-2,9,0
		)
		rect(
			i*11-10,1,i*11-1,10,7
		)
		spr(
			frt,
			i*11-9,
			2
		)
	end
end
                              
-- dig hole for new plant
function new_bed(bx,by)
	-- dig only on gras
	if mget(bx,by) == 0 or
	mget(bx,by) == 1 then
	local bed = {
		x=bx,
		y=by,
		s=2,    -- sprite
		t=0,    -- grow time
		w=0,    -- water
		mx=320, -- timer max
		typ=nil -- seed type
	}
	add(beds, bed)
	end
end

-- plant a seed
function plant_seed(bx,by)
	if mget(bx,by) == 2 then
		for bed in all(beds) do
			if bed.x == bx and
				  bed.y == by then
				  bed.s=3
				  bed.typ=
				  types[flr(rnd(#types))+1]
			end
		end
	end
end

-- water a plant
function water_plant(bx,by)
	if mget(bx,by) > 2 then
		for bed in all(beds) do
			if bed.x == bx and
				  bed.y == by then
				  bed.w += 25
			end
		end
	end
end

-- harvest
function harvest(bx,by)
	if mget(bx,by) == 5 then
		for bed in all(beds) do
			if bed.x == bx and
			   bed.y == by then
			   add(p.inv,bed.typ[2])
			   bed.s = 2
			   bed.t = 0
			   bed.w = 0
			   bed.typ = nil
			   mset(bx,by,2)
			end
		end
	end
end
-->8
-- debug

function debug()

end
__gfx__
00000000000000000444444004444440044444400444444000000000000000000000000000000000000000000000000000000000000000000000000000033300
000000000000000044444444444444444444444444444444007b3b00000330000003300000000000000000000000000000000000000000000000000003544450
0070070000000030442444444424494444244a434444444403bb33b0003333000033330000000000000000000000000000000000000000000000000035444244
00077000030003004444442444944424434a44344444444403bbb7b0000330000003300000000000000000000000000000000000000000000000000035244445
000770000030030044444444444444444434443444444444053bbb50009999000088880000000000000000000000000000000000000000000000000054444445
00700700003000004424444444244444443444444444444405333350059999500588885000000000000000000000000000000000000000000000000053442435
00000000000000004444444444444944444444444444444400555500005555000055550000000000000000000000000000000000000000000000000003344450
00000000000000000444444004444440044444400444444000000000000000000000000000000000000000000000000000000000000000000000000000545530
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00222000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000
00020000003000000ddd000000666000000000000000000000000000000300000003330000000000000000000000000000000000000000000000000000444000
00020000000430000d0d0d0006000600000000000000000000000000033390000008800000000000000000000000000000000000000000000000000000404000
00020000000900000dccdd0000000600000000000000000000000000000999000088880000000000000000000000000000000000000000000000000004545400
006260000099900000dd0d0000006000000000000000000000000000000099000088880000000000000000000000000000000000000000000000000004545400
006660000009000000dd000000000400000000000000000000000000000000900008800000000000000000000000000000000000000000000000000000555000
00666000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000260000030000000dd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000666000004300000dd000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00006600000900000000d0c000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0ae444000ae44400000000000ae4440000e0000000444ea000444ea0000000000000000000000000000000000000000000000000000000000000000000000000
e4f7f740e447f7400ae44400e4f7f7400a4444000444444e0444444e00444ea00000000000000000000000000000000000000000000000000000000000000000
04fcfc4004fcfc40e447f74004fcfc40e4f7f74004444440044444400444444e0000000000000000000000000000000000000000000000000000000000000000
04ffef4004ffef4004fcfc4045ffef4004fcfc400444444004444440044444400000000000000000000000000000000000000000000000000000000000000000
401111000011110004ffef400011110045ffef400044440000444400044444400000000000000000000000000000000000000000000000000000000000000000
0f0110f00f0110f0001111000f0110f0000110000f1441f00f1441f00f4444f00000000000000000000000000000000000000000000000000000000000000000
00dddd0000d6dd000fdd6df000dddd000fddddf000dddd0000dddd0000dddd000000000000000000000000000000000000000000000000000000000000000000
00066000000060000006000006106000006016000006600000060000000060000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000010000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000100000100000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0001000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000001000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
